{"version":3,"sources":["components/search-field/SearchField.module.css","components/preloader/Preloader.module.css","components/users-page/UsersPage.module.css","components/hightlight-text/HightlightText.module.css","components/modal-window/ModalWindow.module.css","api/usersPageApi.ts","redux/users-page/actionsUsersPage.ts","redux/users-page/thunksUsersPage.ts","redux/app/appReducerActions.ts","components/users-page/UsersPage.tsx","components/hightlight-text/HightlightText.tsx","components/modal-window/ModalWindow.tsx","components/users-page/UsersPageContainer.tsx","redux/modal/actionsModal.ts","assets/img/preloader.gif","components/preloader/Preloader.tsx","components/search-field/SearchField.tsx","App.tsx","reportWebVitals.ts","redux/users-page/usersPageReducer.ts","redux/modal/modalWindowReducer.ts","redux/app/appReducer.ts","redux/store.ts","index.tsx"],"names":["module","exports","instance","axios","create","baseURL","usersAPI","get","searchUsersAC","value","type","fetchUsersTC","dispatch","a","response","users","data","loading","e","console","log","UsersPage","backlight","activateModal","deleteUser","className","styles","usersList","map","u","usersContainer","buttonContainer","onClick","id","button","city","address","suite","street","nameCompany","company","name","textBold","username","email","HightlightText","filter","str","regexp","RegExp","matchValue","match","split","s","index","array","length","c","shift","style","heightLights","ModalWindow","props","activeModal","modal","modalActive","setActiveModal","modalContent","modalActiveContent","event","stopPropagation","closeButton","children","UsersPageContainer","filteredUsers","useSelector","state","dataModalWindow","useDispatch","useState","setDataModalAC","deleteUsersAC","modalStyle","Preloader","preloaderContainer","img","src","preloader","SearchField","onChangeFilter","reset","inputContainer","input","onChange","placeholder","App","el","useEffect","currentTarget","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","InitialState","rootReducer","combineReducers","action","search","item","toLowerCase","includes","deleteUsers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9ebdc45c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"SearchField_inputContainer__3zFxz\",\"input\":\"SearchField_input__2cBBl\",\"button\":\"SearchField_button__20A-d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderContainer\":\"Preloader_preloaderContainer__3sUcm\",\"img\":\"Preloader_img__1dWEu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersList\":\"UsersPage_usersList__koAGV\",\"usersContainer\":\"UsersPage_usersContainer__r0XNr\",\"buttonContainer\":\"UsersPage_buttonContainer__LheBZ\",\"users\":\"UsersPage_users__1Mm6I\",\"modalStyle\":\"UsersPage_modalStyle__IuKEA\",\"textBold\":\"UsersPage_textBold__1JbZN\",\"input\":\"UsersPage_input__1ayE2\",\"button\":\"UsersPage_button__1LJVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heightLights\":\"HightlightText_heightLights__7aRP_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"ModalWindow_modal__1BiLn\",\"modalActive\":\"ModalWindow_modalActive__37Wpi\",\"modalContent\":\"ModalWindow_modalContent__1yy4I\",\"modalActiveContent\":\"ModalWindow_modalActiveContent__1db60\",\"closeButton\":\"ModalWindow_closeButton__2Go7r\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://jsonplaceholder.typicode.com/',\r\n\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers() {\r\n        const promise = instance.get('users');\r\n        return promise;\r\n    }\r\n}\r\n","import {UsersType} from \"./usersPageReducer\";\r\n\r\n//actions\r\nexport const setUsersAC = (users: Array<UsersType> | undefined) => ({type: 'UsersPage/SET-USERS', users} as const)\r\n\r\nexport const searchUsersAC = (value: string) => ({type: 'UserPage/SEARCH', value} as const)\r\n\r\nexport const deleteUsersAC = (id: number) => ({type: 'UserPage/DELETE-USER', id} as const)\r\n\r\n\r\n//actions types\r\nexport type ActionsUsersPageType = SetUsersActionType | SearchActionType | DeleteUsersActionType\r\n\r\ntype SetUsersActionType = ReturnType<typeof setUsersAC>\r\n\r\ntype SearchActionType = ReturnType<typeof searchUsersAC>\r\n\r\ntype DeleteUsersActionType = ReturnType<typeof deleteUsersAC>\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {usersAPI} from \"../../api/usersPageApi\";\r\nimport {setUsersAC} from \"./actionsUsersPage\";\r\nimport {loadingDataAC} from \"../app/appReducerActions\";\r\n\r\n\r\nexport const fetchUsersTC = () => {\r\n    return async (dispatch: Dispatch) => {\r\n        const response = await usersAPI.getUsers()\r\n        try {\r\n            dispatch(setUsersAC(response.data))\r\n            dispatch(loadingDataAC(false))\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\n","//actions\r\nexport const loadingDataAC = (loading: boolean) => ({type: 'APP/LOADING-DATA', loading} as const)\r\n\r\n//actions types\r\nexport type ActionsAppReducerType = setUsersActionType\r\n\r\ntype setUsersActionType = ReturnType<typeof loadingDataAC>\r\n\r\n","import React, {ReactNode} from \"react\";\r\nimport {UsersType} from \"../../redux/users-page/usersPageReducer\";\r\nimport styles from \"./UsersPage.module.css\"\r\nimport {modalDataType} from \"../../redux/modal/modalWindowReducer\";\r\n\r\n\r\nexport const UsersPage: React.FC<UsersPagePropsType> = ({users, backlight, activateModal, deleteUser}) => {\r\n\r\n    return (\r\n        <div className={styles.usersList}>\r\n            {users?.map(u => {\r\n                return <div className={styles.usersContainer}>\r\n                    <div className={styles.buttonContainer}>\r\n                        <button onClick={() => deleteUser(u.id)} className={styles.button}>delete user\r\n                        </button>\r\n                    </div>\r\n                    <div onClick={() => activateModal({\r\n                        city: u.address.city,\r\n                        suite: u.address.suite,\r\n                        street: u.address.street,\r\n                        nameCompany: u.company.name\r\n                    })} className={styles.users} key={u.id}>\r\n                        <div><span className={styles.textBold}>name: </span> {backlight(u.name)}</div>\r\n                        <div><span className={styles.textBold}>username: </span> {backlight(u.username)}</div>\r\n                        <div><span className={styles.textBold}>email: </span> {backlight(u.email)}</div>\r\n                    </div>\r\n                </div>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\n//types\r\ntype UsersPagePropsType = {\r\n    users: Array<UsersType> | undefined\r\n    backlight: (value: string) => ReactNode\r\n    activateModal: (value: modalDataType) => void\r\n    deleteUser: (id: number) => void\r\n}\r\n","import React from \"react\";\r\nimport style from \"./HightlightText.module.css\"\r\n\r\nexport const HightlightText: React.FC<HightlightTextPropsType> = ({filter, str}) => {\r\n\r\n    if (!filter) return <>{str}</>\r\n\r\n    const regexp = new RegExp(filter, 'ig')\r\n\r\n    const matchValue = str.match(regexp)\r\n\r\n    if (matchValue) {\r\n        return <>{\r\n            str.split(regexp).map((s, index, array) => {\r\n                if (index < array.length - 1) {\r\n                    const c = matchValue.shift()\r\n                    return <>{s}<span className={style.heightLights}>{c}</span></>\r\n                }\r\n                return s\r\n            })\r\n        }</>\r\n    }\r\n    return <>{str}</>\r\n}\r\n\r\n//type\r\ntype HightlightTextPropsType = {\r\n    filter: string\r\n    str: string\r\n}\r\n","import React, {Dispatch, SetStateAction} from \"react\";\r\nimport styles from \"./ModalWindow.module.css\"\r\n\r\nexport const ModalWindow: React.FC<ModalWindowPropsType> = (props) => {\r\n    return <div\r\n        className={props.activeModal ? styles.modal + ' ' + styles.modalActive : styles.modal}\r\n        onClick={() => props.setActiveModal(false)}\r\n    >\r\n        <div\r\n            className={props.activeModal ? styles.modalContent + ' ' + styles.modalActiveContent : styles.modalContent}\r\n            onClick={(event => event.stopPropagation())}\r\n        >\r\n            <button onClick={() => props.setActiveModal(false)} className={styles.closeButton}>x</button>\r\n            <div>{props.children}</div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n//types\r\ntype ModalWindowPropsType = {\r\n    children: React.ReactNode\r\n    activeModal: boolean\r\n    setActiveModal: Dispatch<SetStateAction<boolean>>\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../redux/store\";\r\nimport {UsersType} from \"../../redux/users-page/usersPageReducer\";\r\nimport {UsersPage} from \"./UsersPage\";\r\nimport {HightlightText} from \"../hightlight-text/HightlightText\";\r\nimport {ModalWindow} from \"../modal-window/ModalWindow\";\r\nimport styles from \"./UsersPage.module.css\";\r\nimport {modalDataType} from \"../../redux/modal/modalWindowReducer\";\r\nimport {setDataModalAC} from \"../../redux/modal/actionsModal\";\r\nimport {deleteUsersAC} from \"../../redux/users-page/actionsUsersPage\";\r\n\r\n\r\nexport const UsersPageContainer: React.FC<UsersPageContainerPropsType> = ({filter, filteredUsers}) => {\r\n\r\n    const data = useSelector<AppRootStateType, modalDataType>(state => state.dataModalWindow.data)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [activeModal, setActiveModal] = useState<boolean>(false)\r\n\r\n    const backlight = (str: string) => {\r\n        return <HightlightText filter={filter} str={str}/>\r\n    }\r\n\r\n    const activateModal = (value: modalDataType) => {\r\n        setActiveModal(true)\r\n        dispatch(setDataModalAC(value))\r\n    }\r\n\r\n    const deleteUser = (id: number) => {\r\n        dispatch(deleteUsersAC(id))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <UsersPage users={filteredUsers} backlight={backlight} activateModal={activateModal}\r\n                       deleteUser={deleteUser}/>\r\n            <ModalWindow activeModal={activeModal} setActiveModal={setActiveModal}>\r\n                <div>\r\n                    <div className={styles.modalStyle}>\r\n                        <span className={styles.textBold}>Adress:</span>\r\n                        <div>city: {data.city}</div>\r\n                        <div>street: {data.street}</div>\r\n                        <div>suite: {data.suite}</div>\r\n                    </div>\r\n                    <div className={styles.modalStyle}>\r\n                        <div>\r\n                            <span className={styles.textBold}>Company name: </span>\r\n                            {data.nameCompany}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ModalWindow>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n//types\r\ntype UsersPageContainerPropsType = {\r\n    filter: string\r\n    filteredUsers: Array<UsersType> | undefined\r\n}\r\n","import {modalDataType} from \"./modalWindowReducer\";\r\n\r\n//actions\r\nexport const setDataModalAC = (data: modalDataType) => ({type: 'ModalWindow/SET-DATA', data} as const)\r\n\r\n//actions types\r\nexport type ActionsModalWindowType = setUsersActionType\r\n\r\ntype setUsersActionType = ReturnType<typeof setDataModalAC>\r\n\r\n","export default __webpack_public_path__ + \"static/media/preloader.a7aefd22.gif\";","import React from 'react'\r\nimport preloader from \"../../assets/img/preloader.gif\"\r\nimport styles from \"./Preloader.module.css\"\r\n\r\n\r\nexport const Preloader = () => (\r\n    <div className={styles.preloaderContainer}>\r\n        <img className={styles.img} src={preloader}/>\r\n    </div>\r\n)\r\n\r\n\r\n","import React, {ChangeEvent} from \"react\";\r\nimport styles from \"./SearchField.module.css\";\r\n\r\nexport const SearchField: React.FC<SearchFieldPropsType> = ({filter, onChangeFilter, reset}) => {\r\n    return <div>\r\n        <div className={styles.inputContainer}>\r\n            <input className={styles.input} value={filter} onChange={onChangeFilter} placeholder={'search...'}/>\r\n            <button className={styles.button} onClick={reset}>reset</button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n//types\r\ntype SearchFieldPropsType = {\r\n    filter: string\r\n    onChangeFilter: (e: ChangeEvent<HTMLInputElement>) => void\r\n    reset: () => void\r\n}\r\n","import React, {ChangeEvent, useEffect} from 'react';\nimport './App.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {fetchUsersTC} from \"./redux/users-page/thunksUsersPage\";\nimport {UsersPageContainer} from \"./components/users-page/UsersPageContainer\";\nimport {Preloader} from \"./components/preloader/Preloader\";\nimport {AppRootStateType} from \"./redux/store\";\nimport {SearchField} from \"./components/search-field/SearchField\";\nimport {UsersType} from \"./redux/users-page/usersPageReducer\";\nimport {searchUsersAC} from \"./redux/users-page/actionsUsersPage\";\n\n\nfunction App() {\n    const loading = useSelector<AppRootStateType, boolean>(el => el.loading.loading)\n\n    const filteredUsers = useSelector<AppRootStateType, Array<UsersType> | undefined>(state => state.users.filteredUsers)\n\n    const filter = useSelector<AppRootStateType, string>(state => state.users.value)\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(fetchUsersTC())\n    }, [])\n\n    const onChangeFilter = (e: ChangeEvent<HTMLInputElement>) => {\n        dispatch(searchUsersAC(e.currentTarget.value))\n    }\n\n    const reset = () => {\n        dispatch(searchUsersAC(''))\n        dispatch(fetchUsersTC())\n    }\n\n    if (loading) {\n        return <Preloader/>\n    }\n\n    return (\n        <div className=\"App\">\n            <SearchField filter={filter} onChangeFilter={onChangeFilter} reset={reset}/>\n            <UsersPageContainer filter={filter} filteredUsers={filteredUsers}/>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {ActionsUsersPageType} from \"./actionsUsersPage\";\r\n\r\n\r\nconst initialState: InitialStateType = {\r\n    usersList: [],\r\n    value: '',\r\n    filteredUsers: []\r\n}\r\n\r\n\r\nexport const usersPageReducer = (state: InitialStateType = initialState, action: ActionsUsersPageType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'UsersPage/SET-USERS':\r\n            return {\r\n                ...state,\r\n                usersList: action.users,\r\n                filteredUsers: action.users\r\n            }\r\n\r\n        case 'UserPage/SEARCH': {\r\n            const {value} = action;\r\n\r\n            const search = (item: string) => item.toLowerCase().includes(value.toLowerCase())\r\n\r\n            const filteredUsers = state.usersList?.filter(u => {\r\n                return search(u.name) || search(u.username) || search(u.email)\r\n            })\r\n\r\n            return {...state, value, filteredUsers};\r\n        }\r\n\r\n        case \"UserPage/DELETE-USER\": {\r\n            const {id} = action\r\n            const deleteUsers = state.usersList?.filter(el => el.id !== id)\r\n            return {...state,  filteredUsers: deleteUsers, usersList: deleteUsers}\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n//types\r\ntype InitialStateType = {\r\n    usersList: Array<UsersType> | undefined,\r\n    value: string,\r\n    filteredUsers: Array<UsersType> | undefined\r\n}\r\n\r\nexport type UsersType = {\r\n    id: number\r\n    name: string\r\n    username: string\r\n    email: string\r\n    address: AddressType\r\n    phone: string\r\n    website: string\r\n    company: CompanyType\r\n}\r\n\r\ntype AddressType = {\r\n    street: string\r\n    suite: string\r\n    city: string\r\n    zipcode: string\r\n    geo: GeoType\r\n}\r\n\r\ntype GeoType = {\r\n    lat: string\r\n    lng: string\r\n}\r\n\r\ntype CompanyType = {\r\n    name: string\r\n    catchPhrase: string\r\n    bs: string\r\n}\r\n","import {ActionsModalWindowType} from \"./actionsModal\";\r\n\r\nconst InitialState: InitialStateType = {\r\n    data: {\r\n        street: '',\r\n        city: '',\r\n        suite: '',\r\n        nameCompany: ''\r\n    }\r\n}\r\n\r\nexport const modalWindowDataReducer = (state: InitialStateType = InitialState, action: ActionsModalWindowType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'ModalWindow/SET-DATA':\r\n            return {\r\n                ...state,\r\n                data: action.data\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n//types\r\ntype InitialStateType = { data: modalDataType}\r\n\r\nexport type modalDataType = {\r\n    street: string\r\n    suite: string\r\n    city: string\r\n    nameCompany: string\r\n}\r\n\r\n","import {ActionsAppReducerType} from \"./appReducerActions\";\r\n\r\n\r\nconst initialState: InitialStateType = {\r\n    loading: true\r\n}\r\n\r\nexport const loadingAppReducer = (state: InitialStateType = initialState, action: ActionsAppReducerType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/LOADING-DATA':\r\n            return {\r\n                ...state,\r\n                loading: action.loading\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n//types\r\ntype InitialStateType = {loading: boolean}\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {usersPageReducer} from \"./users-page/usersPageReducer\";\r\nimport {modalWindowDataReducer} from \"./modal/modalWindowReducer\";\r\nimport {loadingAppReducer} from \"./app/appReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    users: usersPageReducer,\r\n    dataModalWindow: modalWindowDataReducer,\r\n    loading: loadingAppReducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\n//types\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}